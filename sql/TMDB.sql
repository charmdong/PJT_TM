/* 
TABLE NAME : USER 
사용자 정보 테이블
*/ 
CREATE TABLE USER (
	ID 				VARCHAR(20) PRIMARY KEY,
	PASSWORD 		VARCHAR(20) NOT NULL,
	NAME 			VARCHAR(20) NOT NULL,
	BIRTH 			DATE NOT NULL,
	PHONE 			VARCHAR(15),
	EMAIL 			VARCHAR(30),
	CLUB_CODE 		INT,
	NTRP 			DOUBLE DEFAULT 0,
	AVG_EVAL_GRADE 	DOUBLE DEFAULT 0
);

/*
TABLE NAME : CLUB
클럽 정보 테이블
*/
CREATE TABLE CLUB (
	CLUB_CODE 	INT PRIMARY KEY AUTO_INCREMENT,
    NAME 		VARCHAR(20) NOT NULL,
    CITY_CODE	INT NOT NULL,
    GU_CODE		INT NOT NULL,
    REP_ID		VARCHAR(20) NOT NULL,
    AVG_NTRP	DOUBLE DEFAULT 0,
    MEMBER_NUM 	INT DEFAULT 0,
    REG_DATE	DATETIME
);

/*
TABLE NAME : COURT
테니스 경기장 정보 테이블
*/
CREATE TABLE COURT (
	COURT_CODE	INT PRIMARY KEY AUTO_INCREMENT,
    NAME		VARCHAR(20) NOT NULL,
    SI_CODE		INT NOT NULL,
    GU_CODE		INT NOT NULL,
    DONG_CODE	INT NOT NULL,
    URL			TEXT
);

/*
TABLE NAME : MATCH_RESULT
매칭된 경기 결과 정보 테이블
*/
CREATE TABLE MATCH_RESULT (
	MID					INT PRIMARY KEY AUTO_INCREMENT,
    TEAM_A_PLAYER1		VARCHAR(20) NOT NULL,
    TEAM_A_PLAYER2 		VARCHAR(20),
    TEAM_B_PLAYER1 		VARCHAR(20) NOT NULL,
    TEAM_B_PLAYER2		VARCHAR(20),
    TEAM_A_CLUB_CODE	INT,
	TEAM_B_CLUB_CODE	INT,
    MATCH_DATE			DATE NOT NULL,
    MATCH_COURT_CODE	INT NOT NULL,
    MATCH_TYPE			INT NOT NULL,
    WINNER				INT NOT NULL,
    PLAY_TIME_HOUR		INT DEFAULT 0,
    PLAY_TIME_MIN		INT NOT NULL DEFAULT 0,
    FOREIGN KEY (MATCH_COURT_CODE) REFERENCES COURT (COURT_CODE) -- 필요한가
);

/*
TABLE NAME : MATCH_RESULT_DETAIL
매칭된 경기 결과 상세 정보 테이블
*/
CREATE TABLE MATCH_RESULT_DETAIL (
	MID					INT,
    SET_NO				INT NOT NULL,
    GAME_SCORE_TEAM_A 	INT NOT NULL,
    GAME_SCORE_TEAM_B	INT NOT NULL,
    -- PRIMARY KEY (MID, SET_NO),
    FOREIGN KEY (MID) REFERENCES MATCH_RESULT (MID)
);

/*
TABLE NAME : EVAL_USER
선수 평가 정보 테이블
*/
CREATE TABLE EVAL_USER (
	MID 		INT,
    SRC_USER	VARCHAR(20) NOT NULL,
    DES_USER	VARCHAR(20) NOT NULL,
    M_SCORE		INT NOT NULL DEFAULT 0,
    DESCRIPTION	TEXT,
    FOREIGN KEY (MID) REFERENCES MATCH_RESULT (MID)
);

/*
TABLE NAME : USER_MATCH_RECORD
사용자 전적 정보 테이블
*/
CREATE TABLE USER_MATCH_RECORD (
	ID			VARCHAR(20) NOT NULL,
    WIN_SINGLE	INT DEFAULT 0,
    LOSE_SINGLE	INT DEFAULT 0,
    WIN_DOUBLE	INT DEFAULT 0,
    LOSE_DOUBLE	INT DEFAULT 0,
    FOREIGN KEY(ID) REFERENCES USER(ID)
);

/*
TABLE NAME : PREFER_COURTEVAL_USER
선호하는 경기장 정보 테이블
*/
CREATE TABLE PREFER_COURT (
	ID			VARCHAR(20) NOT NULL,
    COURT_CODE	INT,
    FOREIGN KEY(ID) REFERENCES USER(ID),
    FOREIGN KEY(COURT_CODE) REFERENCES COURT(COURT_CODE)
);

/*
TABLE NAME : MATCH_POST
매칭을 위한 게시글
*/
CREATE TABLE MATCH_POST (
	POST_NO 			INT PRIMARY KEY AUTO_INCREMENT,
    REG_ID 				VARCHAR(20),
    TITLE 				VARCHAR(50) NOT NULL,
    DESCRIPTION 		TEXT,
    MATCH_DATE 			DATETIME NOT NULL,
    MATCH_COURT_CODE 	INT,
    MATCH_TYPE 			INT NOT NULL,
    MATCHING_COMPLETED 	BOOLEAN DEFAULT FALSE,
    REG_DATE 			DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- trigger
DELIMITER $$
CREATE TRIGGER SET_USER_GRADE
AFTER INSERT ON EVAL_USER
FOR EACH ROW
BEGIN
UPDATE 	USER 
SET 	AVG_EVAL_GRADE = (SELECT	SUM(M_SCORE) / COUNT(*)
							FROM	EVAL_USER
						GROUP BY 	DES_USER)
                        WHERE	TABLE_NAME = "USER";
END $$
    
